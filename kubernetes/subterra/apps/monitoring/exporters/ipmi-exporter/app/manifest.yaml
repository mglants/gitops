---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipmi-exporter
  namespace: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ipmi-exporter
  template:
    metadata:
      annotations:
        configmap.reloader.stakater.com/reload: ipmi-exporter
      labels:
        app.kubernetes.io/name: ipmi-exporter
    spec:
      volumes:
        - name: ipmi-exporter
          configMap:
            name: ipmi-exporter
      containers:
        - name: ipmi-exporter
          image: prometheuscommunity/ipmi-exporter:v1.10.0
          args: [--config-file /tmp/config.yaml]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp/config.yaml
              subPath: config.yaml
              name: ipmi-exporter
          ports:
            - name: prometheus
              containerPort: 9290
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 50Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ipmi-exporter
  namespace: monitoring
data:
  config.yaml: |
    modules:
      default:
        user: "default_user"
        pass: "example_pw"
        driver: "LAN_2_0"
        privilege: "user"
---
apiVersion: v1
kind: Service
metadata:
  name: ipmi-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: ipmi-exporter
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: ipmi-exporter
  ports:
    - name: prometheus
      port: 9290
      protocol: TCP
      targetPort: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ipmi-exporter
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ipmi-exporter
  endpoints:
    - port: prometheus
      metricRelabelings:
        - sourceLabels: [__address__]
          separator: ;
          regex: (.*)
          targetLabel: __param_target
          replacement: ${1}
          action: replace
        - sourceLabels: [__param_target]
          separator: ;
          regex: (.*)
          targetLabel: instance
          replacement: ${1}
          action: replace
