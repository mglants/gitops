---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: loki
      version: 6.7.3
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    deploymentMode: SimpleScalable

    loki:
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-secret

      auth_enabled: false

      analytics:
        reporting_enabled: false

      compactor:
        working_directory: /var/loki/compactor/retention
        delete_request_store: s3
        retention_enabled: true

      frontend:
        max_outstanding_per_tenant: 4096

      ingester:
        chunk_encoding: snappy

      limits_config:
        ingestion_burst_size_mb: 128
        ingestion_rate_mb: 64
        max_query_parallelism: 100
        per_stream_rate_limit: 64M
        per_stream_rate_limit_burst: 128M
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        retention_period: 30d
        shard_streams:
          enabled: true
        split_queries_by_interval: 1h

      query_scheduler:
        max_outstanding_requests_per_tenant: 4096

      rulerConfig:
        enable_api: true
        enable_alertmanager_v2: true
        alertmanager_url: http://alertmanager.monitoring.svc.cluster.local:9093
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /rules/fake

      schemaConfig:
        configs:
          - from: '2024-04-01'
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      commonConfig:
        replication_factor: 1
      server:
        log_level: info
        grpc_server_max_recv_msg_size: 8388608
        grpc_server_max_send_msg_size: 8388608

      storage:
        type: s3
        bucketNames:
          chunks: loki
          ruler: loki
          admin: loki
        s3:
          s3ForcePathStyle: true
          insecure: false
          endpoint: nas.ur30.ru:9000
          region: us-east-1

    gateway:
      replicas: 1
      enabled: true
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.27-alpine@sha256:6097fa6666257aa3e991a2d4b48df07468ea3adb58acba3ab9c6de34c664d714
      deploymentStrategy:
        type: RollingUpdate
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: gateway
      ingress:
        enabled: true
        ingressClassName: external-nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/16
          external-dns.alpha.kubernetes.io/type: internal
        hosts:
          - host: loki.ur30.ru
            paths:
              - path: /
                pathType: Prefix

    write:
      replicas: 1
      persistence:
        storageClass: freenas-iscsi-csi
        size: 10Gi

    read:
      replicas: 1

    backend:
      replicas: 1
      persistence:
        storageClass: freenas-iscsi-csi
        size: 10Gi
    chunksCache:
      allocatedMemory: 2048
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      rules:
        enabled: false
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false

    sidecar:
      image:
        repository: ghcr.io/kiwigrid/k8s-sidecar
      rules:
        searchNamespace: ALL
        folder: /rules/fake

    lokiCanary:
      enabled: false

    test:
      enabled: false
  valuesFrom:
    - targetPath: loki.storage.s3.accessKeyId
      kind: Secret
      name: loki-secret
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: loki.storage.s3.secretAccessKey
      kind: Secret
      name: loki-secret
      valuesKey: AWS_SECRET_ACCESS_KEY
