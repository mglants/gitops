---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
  namespace: apps
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      main:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: 'true'

        statefulset:
          volumeClaimTemplates:
            - name: data
              accessMode: ReadWriteOnce
              size: 15Gi
              storageClass: freenas-iscsi-csi
              globalMounts:
                - path: /data/local

        pod:
          securityContext:
            supplementalGroups:
              - 65542

        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.11.6
            env:
              # Configure application
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://paperless.ur30.ru
              PAPERLESS_PORT: '8000'
              PAPERLESS_TIME_ZONE: Europe/Moscow
              PAPERLESS_WEBSERVER_WORKERS: '2'
              PAPERLESS_TASK_WORKERS: '2'
              # Configure Remote User auth
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: 'true'
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/local/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: '60'
              PAPERLESS_CONSUMER_RECURSIVE: 'true'
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: 'true'
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: rus eng
              PAPERLESS_OCR_LANGUAGE: rus+eng
              # Configure redis integration
              PAPERLESS_REDIS: redis://paperless-redis.apps.svc.cluster.local:6379
              # Configure user permissions
              USERMAP_UID: '65534'
              USERMAP_GID: '65534'
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_PASSWORD
            resources:
              requests:
                cpu: 11m
                memory: 1812M
              limits:
                memory: 1812M

    service:
      main:
        ports:
          http:
            port: 8000

    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.infra.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/16
          external-dns.alpha.kubernetes.io/type: internal
        hosts:
          - host: &host paperless.ur30.ru
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: paperless-tls
    persistence:
      nas:
        type: persistentVolumeClaim
        existingClaim: paperless-nfs
        globalMounts:
          - path: /data/nas
