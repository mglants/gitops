---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: apps
spec:
  interval: 5m
  timeout: 10m0s
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm
      chart: nextcloud
      version: 8.0.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: nextcloud
      tag: 31.0.8-fpm-alpine
      pullPolicy: IfNotPresent
    replicaCount: 1
    podAnnotations:
      backup.velero.io/backup-volumes: nextcloud-data
    nextcloud:
      host: cloud.glants.xyz
      update: 0
      datadir: /nextcloud/data
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
        usernameKey: ADMIN_USERNAME
        passwordKey: ADMIN_PASSWORD
        tokenKey: METRICS_TOKEN
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST
      mail:
        enabled: true
        fromAddress: noreply
        domain: glants.xyz
        smtp:
          host: mail.ur30.ru
          secure: ''
          port: 25
          authtype: LOGIN
      extraEnv:
        - name: INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: *secret
              key: INSTANCE_ID
        - name: PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: *secret
              key: PASSWORD_SALT
        - name: ENCRYPTION_SECRET
          valueFrom:
            secretKeyRef:
              name: *secret
              key: ENCRYPTION_SECRET
      defaultConfigs:
        .htaccess: true
        redis.config.php: false
        apache-pretty-urls.config.php: true
        apcu.config.php: true
        apps.config.php: true
        autoconfig.php: false
        smtp.config.php: true
      configs:
        migrate.config.php: |-
          <?php
          $CONFIG = array (
            'instanceid' => getenv('INSTANCE_ID'),
            'passwordsalt' => getenv('PASSWORD_SALT'),
            'secret' => getenv('ENCRYPTION_SECRET')
          );
        dbhostoverride.config.php: |-
          <?php
          $CONFIG = array (
            'dbtype' =>  'pgsql',
            'dbname' =>  getenv('POSTGRES_DB'),
            'dbhost' =>  getenv('POSTGRES_HOST'),
            'dbtableprefix' =>  'oc_',
            'dbuser' =>  getenv('POSTGRES_USER'),
            'dbpassword' =>  getenv('POSTGRES_PASSWORD')
          );
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies'   => ['external-nginx-controller.networking.svc.cluster.local'],
            'trusted_domains' =>
            array (
                0 => 'cloud.glants.xyz',
            ),
            'encryption.legacy_format_support' => true,
            'encryption.key_storage_migrated' => false,
            'enable_previews' => true,
            'filelocking.enabled' => 'true',
            'installed' => true,
            'overwrite.cli.url' => 'https://cloud.glants.xyz',
            'loglevel' => '2',
            'overweitehost' => 'cloud.glants.xyz',
            'overwriteprotocol' => 'https'
          );
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
      extraVolumes:
        - name: public
          nfs:
            server: 192.168.1.50
            path: /mnt/Storinator/Public
        - name: zakko
          nfs:
            server: 192.168.1.50
            path: /mnt/Storinator/zakko
      extraVolumeMounts:
        - name: public
          mountPath: /public
        - name: zakko
          mountPath: /zakko
    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: alpine
        pullPolicy: IfNotPresent
    ingress:
      enabled: true
      className: external-nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: ingress.ur30.ru
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - secretName: cloud-glants-tls
          hosts:
            - cloud.glants.xyz
    redis:
      enabled: true
      auth:
        enabled: true
        existingSecret: *secret
        existingSecretPasswordKey: REDIS_PASSWORD

    service:
      type: LoadBalancer
      loadBalancerIP: 192.168.40.5
      port: 8080
    cronjob:
      enabled: false
    metrics:
      enabled: true
      replicaCount: 1
      https: false
      timeout: 5s
      image:
        repository: xperimental/nextcloud-exporter
        tag: 0.8.0
        pullPolicy: IfNotPresent
      service:
        type: ClusterIP
        annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port: '9205'
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud-pgsql-pguser-nextcloud
        hostKey: host
        databaseKey: dbname
        usernameKey: user
        passwordKey: password
    persistence:
      ## Nextcloud Data (/var/www/html)
      enabled: true
      existingClaim: nextcloud-config-v1
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: true
    lifecycle:
      postStartCommand: [/bin/sh, -c, crond]
