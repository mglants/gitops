---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: netbox
  namespace: apps
spec:
  interval: 5m
  timeout: 10m0s
  chart:
    spec:
      # renovate: registryUrl=https://charts.boo.tc
      chart: netbox
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: netboxcommunity/netbox
      pullPolicy: IfNotPresent
      tag: v3.7.8
    timeZone: Europe/Moscow
    existingSecret: &secret netbox-secret
    superuser:
      name: mglants
      email: reg@glants.xyz
    postgresql:
      enabled: false
    logging:
      disable_existing_loggers: false
      handlers:
        console:
          class: logging.StreamHandler
      loggers:
        netbox:
          handlers:
            - console
          level: DEBUG
        django:
          handlers:
            - console
          level: DEBUG
      version: 1
    email:
      server: mail.ur30.ru
      port: 465
      username: noreply@gearage.ru
      useSSL: true
      useTLS: false
      timeout: 10
      from: noreply@gearage.ru
    redis:
      enabled: true
      architecture: standalone
      auth:
        existingSecret: *secret
        existingSecretPasswordKey: REDIS_PASSWORD

    persistence:
      enabled: true
      existingClaim: netbox-config-v1
    externalDatabase:
      host: netbox-pgsql-primary.apps.svc
      port: 5432
      existingSecretName: netbox-pgsql-pguser-netbox
      existingSecretKey: password
      database: netbox
      username: netbox
    ingress:
      enabled: true
      className: nginx-external
      annotations:
        kubernetes.io/tls-acme: 'true'
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: ingress.ur30.ru
        nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/16,77.37.244.8/32,94.141.170.143/32
      hosts:
        - host: netbox.gearage.ru
          paths:
            - /
      tls:
        - secretName: netbox-tls
          hosts:
            - netbox.gearage.ru

    remoteAuth:
      enabled: true
      backend: social_core.backends.open_id_connect.OpenIdConnectAuth
      autoCreateUser: true
    extraEnvs:
      - name: SOCIAL_AUTH_OIDC_ENDPOINT
        value: https://authentik.gearage.ru/application/o/netbox/
      - name: LOGOUT_REDIRECT_URL
        value: https://authentik.gearage.ru/application/o/netbox/end-session/
      - name: SOCIAL_AUTH_OIDC_KEY
        value: netbox
      - name: SOCIAL_AUTH_OIDC_SECRET
        valueFrom:
          secretKeyRef:
            name: *secret
            key: OIDC_SECRET
    extraConfig:
      - values:
          SOCIAL_AUTH_PIPELINE:
            - social_core.pipeline.social_auth.social_details
            - social_core.pipeline.social_auth.social_uid
            - social_core.pipeline.social_auth.auth_allowed
            - social_core.pipeline.social_auth.social_user
            - social_core.pipeline.user.get_username
            - social_core.pipeline.user.create_user
            - social_core.pipeline.social_auth.associate_user
            - social_core.pipeline.social_auth.load_extra_data
            - social_core.pipeline.user.user_details
            - netbox.custom_pipeline.add_groups
            - netbox.custom_pipeline.remove_groups
            - netbox.custom_pipeline.set_roles
    extraVolumes:
      - name: netbox-sso-cm
        configMap:
          name: netbox-sso-cm
    extraVolumeMounts:
      - name: netbox-sso-cm
        mountPath: /opt/netbox/netbox/netbox/custom_pipeline.py
        subPath: custom_pipeline.py
        readOnly: true
      - name: netbox-sso-cm
        mountPath: /etc/netbox/config/authentik.py
        subPath: authentik.py
        readOnly: true
