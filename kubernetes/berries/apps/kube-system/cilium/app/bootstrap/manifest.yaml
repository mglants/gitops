---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: 'true'
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: 'false'
  bpf-lb-map-max: '65536'
  bpf-lb-mode: hybrid
  bpf-lb-sock: 'false'
  bpf-map-dynamic-size-ratio: '0.0025'
  bpf-policy-map-max: '16384'
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: '1'
  cluster-name: sh-berries
  cni-exclusive: 'false'
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: 'false'
  debug: 'false'
  debug-verbose: ''
  disable-cnp-status-updates: 'true'
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: 'true'
  enable-bgp-control-plane: 'true'
  enable-bpf-clock-probe: 'false'
  enable-endpoint-health-checking: 'true'
  enable-endpoint-routes: 'true'
  enable-health-check-nodeport: 'true'
  enable-health-checking: 'true'
  enable-hubble: 'true'
  enable-hubble-open-metrics: 'false'
  enable-ipv4: 'true'
  enable-ipv4-big-tcp: 'false'
  enable-ipv4-masquerade: 'true'
  enable-ipv6: 'false'
  enable-ipv6-big-tcp: 'false'
  enable-ipv6-masquerade: 'true'
  enable-k8s-networkpolicy: 'true'
  enable-k8s-terminating-endpoint: 'true'
  enable-l2-neigh-discovery: 'true'
  enable-l7-proxy: 'true'
  enable-local-redirect-policy: 'false'
  enable-policy: default
  enable-remote-node-identity: 'true'
  enable-sctp: 'false'
  enable-svc-source-range-check: 'true'
  enable-vtep: 'false'
  enable-well-known-identities: 'false'
  enable-xt-socket-fallback: 'true'
  external-envoy-proxy: 'false'
  hubble-disable-tls: 'false'
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: 'false'
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: '10'
  k8s-client-qps: '5'
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: 'true'
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: '1024'
  mesh-auth-rotated-identities-queue-size: '1024'
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: 'true'
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: 'false'
  procfs: /host/proc
  proxy-connect-timeout: '2'
  proxy-max-connection-duration-seconds: '0'
  proxy-max-requests-per-connection: '0'
  proxy-prometheus-port: '9964'
  remove-cilium-node-taints: 'true'
  routing-mode: native
  set-cilium-is-up-condition: 'true'
  set-cilium-node-taints: 'true'
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: 'false'
  synchronize-k8s-nodes: 'true'
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: 'true'
  tofqdns-endpoint-max-ip-per-hostname: '50'
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: '10000'
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: '15'
  vtep-cidr: ''
  vtep-endpoint: ''
  vtep-mac: ''
  vtep-mask: ''
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: sh-berries\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address: :4245\ngops: true\ngops-port:\
    \ \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\n\
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:\
    \ true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size\
    \ 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header\
    \ Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age\
    \ 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers\
    \ range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n\
    \        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version\
    \ 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n\
    \        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n\
    \        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtxT0w3NTM4VEE0d3Zwb25kZE9PMU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1qQXlNREl5TjFvWERUSTJNVEF5TVRBeQpNREl5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3cFNJRWdkWGFSSDJGWUN0dkdsN0VsdjNYTTBFVDcyV01QcDlFVSttek5mWVN2UkYKVHNVKzRyWFVUdUZOWEhlYS94bnM0N3JlRVZzU3dmRWIvKzY1UTFEOHFSd1dFalVvK0N0blV0RHhSczk5eFVDbwpDNzdLaFdUajh0K1RlZitDVUNQcFgxM21JMU5VUXRONXh6Kzd6c2lGSndjRWNPWXRlQ0QzRlUwaTRrTE5JZG82ClEyZTFWUTViWDdGbE5xUW5wYkFFWDcya2ZocEZwcW5TYnA3NnVnWGdJdFVkeGFCZm9ZTXNUMnJSRzBFVDRaNysKaFBQdkhUNFZkU3lPeXk2aGRzTmtnZEkxMFhKSFA4SVJVOXJxQUtWU2pYd0xBVGJDUXVtczRxMW9mNlhzUmZwWgoyY21IUHZyUy9CYnlYU2hXcVZJWXpiK2ZlWDhZVVZLRkpQUVNxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTHRIc2ZPYU9UTHFCbldoTitta0l0S3VOYUJmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmVhQnZhWld2WE5NL3gzd2xKZldsRWtTWnFaaU5rbjRxNTlOR0J3c2s4QmFCNUtmZUM1THJBCnpuUXhHaENKd0gvY3V6Y24wRVVJUmcwNkNhVlpVZW13RFNEQ2w3cjQ3UTNOQ3ZYcCtSTDFXTERnUUtHZDNCeVMKMFVIdTVCMzNRSWhmUHJmQ1NMdmtwbFpzMW84amJtbWZKSmRIaHVRZDdxcXhiRXA1aVpzMFpFTlJJUU1RWGlmSgo2UlhoQ2IrdjM1M3ZBWWpDc0hmams4RFZ1T1FmMUJKdFp2N09LUEdhd0dJbkdXaUtHODFDSmlRTUVCdjZ5U3dnClVvcmNmWUVXWGd5OU95L1gvd3NUS1VGbWRNR0lNbUJDanRadkRPNEx0YkpTU2NyQ1BpNXpPdUdYaTBmdE45THAKVWY5Znovc3hJVlZPZ2wzQVllN1lZdDNRVXFuYSt2TEIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3BTSUVnZFhhUkgyRllDdHZHbDdFbHYzWE0wRVQ3MldNUHA5RVUrbXpOZllTdlJGClRzVSs0clhVVHVGTlhIZWEveG5zNDdyZUVWc1N3ZkViLys2NVExRDhxUndXRWpVbytDdG5VdER4UnM5OXhVQ28KQzc3S2hXVGo4dCtUZWYrQ1VDUHBYMTNtSTFOVVF0TjV4eis3enNpRkp3Y0VjT1l0ZUNEM0ZVMGk0a0xOSWRvNgpRMmUxVlE1Ylg3RmxOcVFucGJBRVg3MmtmaHBGcHFuU2JwNzZ1Z1hnSXRVZHhhQmZvWU1zVDJyUkcwRVQ0WjcrCmhQUHZIVDRWZFN5T3l5Nmhkc05rZ2RJMTBYSkhQOElSVTlycUFLVlNqWHdMQVRiQ1F1bXM0cTFvZjZYc1JmcFoKMmNtSFB2clMvQmJ5WFNoV3FWSVl6YitmZVg4WVVWS0ZKUFFTcXdJREFRQUJBb0lCQUZzRW42SFBUVlFZMHNPOApMWWkwenAwSDUrM0ErUU5UNjYxOWZvTmFmdXZUQzVvRUtXZHZYTHN2MHVBVEE5ejlGY08rbk5EcDJIYkY0MEJWClNJT3ZaM25WcUZweWlPQjdmVzZZM3Z3ZVFMNmUwSFkwaUdiMkdFWE5xOU13UWd3UE9TWERwcWExaGJHQWlTbTUKUW4yeGttaG40K0VkcHpZb2RaeDd6eGhudkttWlJBNUdGZTNqZm13a2dMaWc1Zk1pdmxXZGpEcTJhUXhVaHdPYgpJNGEvTkRibitBNCsrM1ZKZzRBdzMvNmY5QkloMkZZM3ZwUWlGR3ZZT0ZDN0h2NmlkdlJxclZoWFhjdU9GYk9YCkhCbjF0azJXaFY0cVFyeS9sczIzY0Rxam9aNHVHTlRmSXIzUlE0WUJNRFhSS0J3VVRBZ3VJdWprTHY5MHIzWlQKZm9TWnlnRUNnWUVBOWh5YzRiOUxZVkVJcW9TcGl6Q2YxV1ZYY0x2NFJxMFc0SnlNZVp6OWkwclZVNElZbWhDNgpuUTBiaTc1SmtUMzJPN1dQVDRqWFlhRlQwSnlOekVDUENUb1VvUXlNWUwwRU5Pd0xkd2hqdGE0MzFKbVFwckxHCnMwUVVtM3ptM1BRdjZjU1BXc2ppVXgvWmNqdzVjcllSY3ZkNnJZREdtbm4zYmVnVzY5dWg4VDhDZ1lFQXltWGoKeW5RaDFrcEhEWnNtbUI2SFlkQnA3a3NIMzZvRTFpUUViNFJoV0FCUzVXMkJIQjgxL01EY1p2d0ZDTzYrLzhtVwp1Wk1XVmNrSmY5UHFRTGtickZyZGcweWRrR0VHSEhldWRIbEhnTGhtWXNwZWpyeURxM29ycWwyWHovQlhGa0ZaCjlzNjdYaVlKOGFqZll2TUN4NnBvYmNmV0ZMdmtSSUhLN0hWNkY1VUNnWUVBenl0UXlCcmVHa0k3T0ViSjdUZjIKSTR6V0tUaWhpdVRqTUJtM2lodWp0aUE5S0xtSGVoRUE5WGoyS2hENUhvRDVDRlFTR2RKSDg0LzQzTThiOGNhYQpZUnI2Q0lObW0zd2cwV2V0VXZyRjdFYUdDcmxsOFZ6bU5Ecm4yZWN1OHVtK2QxcVZqY2N4OU9VSGhzaTVWeDE1CjNMd0VFWThvSHhyeU5CczlTRGN1djhNQ2dZRUF5ZHhURXpFK0tpNU1yVXBIZE1KRi9nMVNDV0wxeUdJV2pzaS8KVDhXMUhJSytLcXBMY1pQRFVZRzhrRTNjYTZ0Si9XeStFZm1iOWhVYWowMzR2WEtoSWdaQ0ZWak5jUmtEY2xMLwpRSlZROWhWenNDWHJwdXBuWEJmdUF1MXpvdVV1eGppSmxIbGRNQ282RXJaOWpYK1hEekpyRXNxVFBueWl6cHl3Cm1hTVZFUDBDZ1lCdmpLNUY4NEIxZng1ZmFuN3RKbUhEL3ZNY2RlZFA2ckpoQlVTTFBSNlFQV0ltMGFPVzVrYnMKdXJQS000MWlIVFJzb1NDSHcrdk9oZE5uL3FkYkhtMDlXV1loeEswMGdlWENpNEcyNjlneDZ1TlRYWGlmbTQvTAp1aDV0d1FJNnpSZzZ3SWtYWVZtZEo1eHBYNTZ4SGRsT2dGeEtoWkgrUUF3OU5FV0o3UVNRQVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtxT0w3NTM4VEE0d3Zwb25kZE9PMU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1qQXlNREl5TjFvWERUSTJNVEF5TVRBeQpNREl5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3cFNJRWdkWGFSSDJGWUN0dkdsN0VsdjNYTTBFVDcyV01QcDlFVSttek5mWVN2UkYKVHNVKzRyWFVUdUZOWEhlYS94bnM0N3JlRVZzU3dmRWIvKzY1UTFEOHFSd1dFalVvK0N0blV0RHhSczk5eFVDbwpDNzdLaFdUajh0K1RlZitDVUNQcFgxM21JMU5VUXRONXh6Kzd6c2lGSndjRWNPWXRlQ0QzRlUwaTRrTE5JZG82ClEyZTFWUTViWDdGbE5xUW5wYkFFWDcya2ZocEZwcW5TYnA3NnVnWGdJdFVkeGFCZm9ZTXNUMnJSRzBFVDRaNysKaFBQdkhUNFZkU3lPeXk2aGRzTmtnZEkxMFhKSFA4SVJVOXJxQUtWU2pYd0xBVGJDUXVtczRxMW9mNlhzUmZwWgoyY21IUHZyUy9CYnlYU2hXcVZJWXpiK2ZlWDhZVVZLRkpQUVNxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTHRIc2ZPYU9UTHFCbldoTitta0l0S3VOYUJmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmVhQnZhWld2WE5NL3gzd2xKZldsRWtTWnFaaU5rbjRxNTlOR0J3c2s4QmFCNUtmZUM1THJBCnpuUXhHaENKd0gvY3V6Y24wRVVJUmcwNkNhVlpVZW13RFNEQ2w3cjQ3UTNOQ3ZYcCtSTDFXTERnUUtHZDNCeVMKMFVIdTVCMzNRSWhmUHJmQ1NMdmtwbFpzMW84amJtbWZKSmRIaHVRZDdxcXhiRXA1aVpzMFpFTlJJUU1RWGlmSgo2UlhoQ2IrdjM1M3ZBWWpDc0hmams4RFZ1T1FmMUJKdFp2N09LUEdhd0dJbkdXaUtHODFDSmlRTUVCdjZ5U3dnClVvcmNmWUVXWGd5OU95L1gvd3NUS1VGbWRNR0lNbUJDanRadkRPNEx0YkpTU2NyQ1BpNXpPdUdYaTBmdE45THAKVWY5Znovc3hJVlZPZ2wzQVllN1lZdDNRVXFuYSt2TEIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpFKzIzbWxoRTlmTUM3VFU5VDF2UjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1qQXlNREl5T0ZvWERUSTJNVEF5TVRBeQpNREl5T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZWYUMyMyt6bGZQdDYrd0FrR1JjbFFqZEFaSmkKSFJqRVYrK0pTY0dTQTNrem5OK2lpTGF3U09nSVN1YjI3blJ6SWJuKzd2aGgyZGdJTldCSXh2ZUJ3ODVmZmJJeQppeGRHd2tGdHBJU1J1aEYzeEpscVFUNTNvc244ZXJyYUJWa1J3RnJlNzJTcDNnMitycmNNZ1NZdVFrSW5tcjJ3ClFvSHBGMVhWU2F2dHdodHVid29mdFZTVDdTZ0Y5MWZOcXhPODAvbU45ekZ2Nk03MHgvbm9EQnFRYWhmRXpwaEsKSk9iRjdNZHpoS0M3UWd2cEZBRGlOUzZFaXMzdUFHQTBuU2s2M0VFWlc1cm5EbFNVcStXd3V0eFZBNnY3WkFPegovQjl3MWdwZTN1QVl5TnBLUk9WVGNDK0lyNkFIbzU2bUVoRXJGa1d1K0FPWHZycG9TYmV6eWc1YTVRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzdSN0h6bWpreTZnWjFvVGZwcENMUwpyaldnWHpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTUg5RFB0SVlkWExhNjBXVmwwUmN1Zzh3VEkwVlB3Qk9qSWtCdW5xU0tGWTZ5NmEKSUZzcVI1TTZNN0d6dkdkUVlYcXdoU0pJYjU3MCtuenZtdWlyNnk5WUpHVHFyclNlNU1MQ0gxeXJxVCtDcktlMApMeTd2cE5tQUZmUVd2T2pkWkpXaGJkNlBtd045QlhnKytwa1JoekFsenNucU51TkZ4OFp1VnNiL2tyZmRWYXM4Ckxid3lrMDUxTlhrcUk4UEF1S0huUTV4T0RrZlpJKzB3VFlOckNpa1Rua2YzZzZlRXB3WnpkcWJMN2k0ODVSWmMKNERMSnRZeVVjRGNINXhjdXN2QW5MU2VVamRDZldidkRUY2hicmNMVE9BZkhDWUE3UmFVVFlnYnVnRGcxdFpXcgpudzN2bFhWM1FkTTYreWpoQUI3bmdqZXdLMzdQbit6NmFvMmxySTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdlZhQzIzK3psZlB0Nit3QWtHUmNsUWpkQVpKaUhSakVWKytKU2NHU0Eza3puTitpCmlMYXdTT2dJU3ViMjduUnpJYm4rN3ZoaDJkZ0lOV0JJeHZlQnc4NWZmYkl5aXhkR3drRnRwSVNSdWhGM3hKbHEKUVQ1M29zbjhlcnJhQlZrUndGcmU3MlNwM2cyK3JyY01nU1l1UWtJbm1yMndRb0hwRjFYVlNhdnR3aHR1YndvZgp0VlNUN1NnRjkxZk5xeE84MC9tTjl6RnY2TTcweC9ub0RCcVFhaGZFenBoS0pPYkY3TWR6aEtDN1FndnBGQURpCk5TNkVpczN1QUdBMG5TazYzRUVaVzVybkRsU1VxK1d3dXR4VkE2djdaQU96L0I5dzFncGUzdUFZeU5wS1JPVlQKY0MrSXI2QUhvNTZtRWhFckZrV3UrQU9YdnJwb1NiZXp5ZzVhNVFJREFRQUJBb0lCQUh2ZzRXYzV5MGNlUFJteAo1TUNVV1pyTkhNU05nUkltaFRnL3FpU091TGo3RU5EZjVSanI1clVjMDJnbWE0T2l2ejFlMHpTSllJUkdlMEJwCkNkVGNWWlBHTCtZdXRERWEvcG5VY3lkRDhaQzdJeENIaStTNk9VNVNONVlaTU5KMDcwOWFaU2hlUldIYXZsclQKdXlPNDFtVlZvVkgyTUIram5kMDl0SG9xT2pwWDFHSHBEdHF3S3VzZXk0Mk42RXRycTBQZEt5aFZSdlc3c3JoLwplVGZNTnpBTEYxK0wwMzBPUGh1RVdWekd6TURiY2hjMFFHYW4vMTlsbnk0alBNOGp2UTJ4RGNqK2pjdmg2aDhYCnlXQU8yMnlUSTlTTE5NUVRJZzB3YlZsc1luSExSSjk1ZTVKeGdJcUN4RGFFMGtHbFd0YjVPOEl1WWRJSy9TWTQKRW90NnBvRUNnWUVBOW1va211cm1KVkZ0SUxRVUZPbU92eTZUdzMvcktVZ3lUdWxhTDkrVDRYcmgxYUlYS085YgowNWU3SFBnNFY3Ylo4bnVxajk0eFlmSWZaWnVzNkxFWkFZTEpNeGZXR25DMm1sU3pMc1h4Nk1wQ3pwL0E0YWRHClZlSDNsU2RrK0xLQmxRVk5PQ2lPNVBQcWtSRUNCQkhxdDcrcEhsaHVvNjZ5WlBvWFdXTDdvd1VDZ1lFQXhMUDgKRFU4U3VZMDN6dEYvZVNjSjJ3RFhpV1NMQ2poT21nTHZIVENKR2ZUTm5PbFJ6eHRBVDZHZ1dTVVJLL1RZSGVBcwo5anNSd1ovbjVka0VXd0c4L0MveHdaVStSYU1GbmJrMlNqNHVoRmo5aENaUkcwMzZGQlJtVHgrcmlJR3VuS3VYCkQ3MWE3TE80QUkveFkyeFhFZFhvM2VnQnJ5cyt1VGZ3NERZZkhtRUNnWUVBZ3h2YXVpcTlwYUY3aE9rTHZreSsKek81RlpNSE5KN3ZvT0tCa2doQmRxSjB2Ui9Ia2pMMCtpSWkwNENjYUkyR0ErVW5mYUlqNmtYaTRSK0hhMER4YQpaN2xrd0RDd2xJVGdRNkZKYlZ1WTZSbWxEamRsOHlxRGUvS3RQc2tsS2tZZ09HQUh4QmVnWUNWLzZ3dTNuTjdECm1sejU2TkY0bk5LNHpJMWNtd3pWZ3RrQ2dZQmNVcjN5NFRKQXRPK0V1di9CdFhrQ3VacHdlaWhvVzVWSTVDZW0KNDZqMTdkaXoxUzc0cmltNU5uczBYQmw3TUNoZm5XQjlFYXg3M0xuVFA5Q3pobFZWYUl0bitNeUprc0tJRE81VwpXbWtxNVRuWVZNT3N0U1N6Vi8vTkUyaEhZZGE2NGk2OHpIdG9yZEduTWVoeWFkOVVGN3A4clBCZGIwYTVXSEJPClRCaS9BUUtCZ1FDM2ptMnNPdUFIdW0ranl5ckJ4QXRQWkRpMks0bW9ReUtqTytGbXlWZVJDckRkTEhWSHRvTEoKM2QranBXNExTWWZuUGd5MXIxL1NmWHVBNWczOWtWOEpma3FaWEtzYlo0Rk5ZK0hXSjk1WnorbVhBOEphTkN2VApFUXlTcHZtS3A3cHhpWk5NaXYyZnBzRDI4OFhxRzJqN2prY3FuRkRxVHJrRHozdGJRNG8vSlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtxT0w3NTM4VEE0d3Zwb25kZE9PMU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1qQXlNREl5TjFvWERUSTJNVEF5TVRBeQpNREl5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3cFNJRWdkWGFSSDJGWUN0dkdsN0VsdjNYTTBFVDcyV01QcDlFVSttek5mWVN2UkYKVHNVKzRyWFVUdUZOWEhlYS94bnM0N3JlRVZzU3dmRWIvKzY1UTFEOHFSd1dFalVvK0N0blV0RHhSczk5eFVDbwpDNzdLaFdUajh0K1RlZitDVUNQcFgxM21JMU5VUXRONXh6Kzd6c2lGSndjRWNPWXRlQ0QzRlUwaTRrTE5JZG82ClEyZTFWUTViWDdGbE5xUW5wYkFFWDcya2ZocEZwcW5TYnA3NnVnWGdJdFVkeGFCZm9ZTXNUMnJSRzBFVDRaNysKaFBQdkhUNFZkU3lPeXk2aGRzTmtnZEkxMFhKSFA4SVJVOXJxQUtWU2pYd0xBVGJDUXVtczRxMW9mNlhzUmZwWgoyY21IUHZyUy9CYnlYU2hXcVZJWXpiK2ZlWDhZVVZLRkpQUVNxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTHRIc2ZPYU9UTHFCbldoTitta0l0S3VOYUJmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmVhQnZhWld2WE5NL3gzd2xKZldsRWtTWnFaaU5rbjRxNTlOR0J3c2s4QmFCNUtmZUM1THJBCnpuUXhHaENKd0gvY3V6Y24wRVVJUmcwNkNhVlpVZW13RFNEQ2w3cjQ3UTNOQ3ZYcCtSTDFXTERnUUtHZDNCeVMKMFVIdTVCMzNRSWhmUHJmQ1NMdmtwbFpzMW84amJtbWZKSmRIaHVRZDdxcXhiRXA1aVpzMFpFTlJJUU1RWGlmSgo2UlhoQ2IrdjM1M3ZBWWpDc0hmams4RFZ1T1FmMUJKdFp2N09LUEdhd0dJbkdXaUtHODFDSmlRTUVCdjZ5U3dnClVvcmNmWUVXWGd5OU95L1gvd3NUS1VGbWRNR0lNbUJDanRadkRPNEx0YkpTU2NyQ1BpNXpPdUdYaTBmdE45THAKVWY5Znovc3hJVlZPZ2wzQVllN1lZdDNRVXFuYSt2TEIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lSQUpHTEh3TEljeTg3dUZ2RFRCeDI4Skl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1qQXlNREl5TjFvWERUSTJNVEF5TVRBeQpNREl5TjFvd0xURXJNQ2tHQTFVRUF3d2lLaTV6YUMxaVpYSnlhV1Z6TG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOZkhLc1ZBMk0wTmRwaHgKOGNHN3dBaC96TjdLNnBZZVNTbjVqajhMUE9tUnRRb1kyLzFMOEdtNDVRYktrbVJpQ0g1RGRYekx1UFcvcWJyQQpWa01FN3FDTit0eW1OM3VOZzgwT2l1Mjl6SUM0UWcyZTdBaXhkZ2pBaXBaUTBmUTZTMng1SFc1K0JpdHN0aXZTCjJuZ05rYW9QeUVld0Fsd1ROR0xLQ1RTNHJMZEYzcnY5VlJQLzlBdk5kYmVzSG5MeDM4eklTSy8veVJKSTNmRDIKaXA5WGVnWXJRakQzMVU0TGJ6cmRBb0dlM1pPdHJOOEMyUk1hMHcva2ZkbExMZFRZUVNQL0lBN0dWR3JGRmJFdwo2SDNOSjhlM21UdmU2U213UlNMQ3ZaWXlnS2pZQXJvRWFMUjA4R1c2ZUNCaXFCcUVXOGN3Njl6aWJrUU5nMXhRCm1uV09KOE1DQXdFQUFhT0JrRENCalRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVV1MGV4ODVvNQpNdW9HZGFFMzZhUWkwcTQxb0Y4d0xRWURWUjBSQkNZd0pJSWlLaTV6YUMxaVpYSnlhV1Z6TG1oMVltSnNaUzFuCmNuQmpMbU5wYkdsMWJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbEdNUmpmcGZEQktZTHVXRUhDRW0KNFBBUXpDYnVJdUorRW1JMUdEQzRjaERmNlUxT2R4NHBKaTA0NFJlT2xVWllWUlZqbUF1bkpHNGNPbmh2S3RhbwpHY1Z1b2JuTHY0R0xMZ1R0Y0UwWnhTalZxS1RMWnpIeThQTlgwMk9yRHdZaFRlTjVKdzJSNjhacnFnOHFZS2pNCm16ek5kR0ZacmpUT2plMGZKL2pISFF3R3RXQVM5cWowbXozaTFEK3BobVZaUStyZUlWOWtBZVJvQ2VPNitYVDgKYnJNS2tiRllsSk9oYS9zK25nZ3pEZHRnVHU0VFB5dFEwSHJ0RU1CTFZqNklCckQ2dmZTeldjdXJLK1pJaEFrWgoxQXMwTk81b0FYWG5WbjNHQTRJeVJSYVFFeCs5UW5JVHFtQ2doOHQ0OE1zeC9lbjJtQ2I3M2MxM0lqNjdFN1NmCnJnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMThjcXhVRFl6UTEybUhIeHdidkFDSC9NM3NycWxoNUpLZm1PUHdzODZaRzFDaGpiCi9VdndhYmpsQnNxU1pHSUlma04xZk11NDliK3B1c0JXUXdUdW9JMzYzS1kzZTQyRHpRNks3YjNNZ0xoQ0RaN3MKQ0xGMkNNQ0tsbERSOURwTGJIa2RibjRHSzJ5Mks5TGFlQTJScWcvSVI3QUNYQk0wWXNvSk5MaXN0MFhldS8xVgpFLy8wQzgxMXQ2d2Vjdkhmek1oSXIvL0pFa2pkOFBhS24xZDZCaXRDTVBmVlRndHZPdDBDZ1o3ZGs2MnMzd0xaCkV4clREK1I5MlVzdDFOaEJJLzhnRHNaVWFzVVZzVERvZmMwbng3ZVpPOTdwS2JCRklzSzlsaktBcU5nQ3VnUm8KdEhUd1picDRJR0tvR29SYnh6RHIzT0p1UkEyRFhGQ2FkWTRud3dJREFRQUJBb0lCQVFDcHBvOHJMWFFIckdrdApMSkUrbCtaQkNISkVUTmdxRlQvQy85SG1JV2pQMzE2dXhLTGFRUVdScWV4djdYOHg2NTN2NEF3VWhYd3p3M0NvClF5YlBaS1pWbDZ2QUpmT0RjZDFKc1FCc01Za0RQMXUzcDlhK2N3QnhteWliVEluMmNvcndpejBuclhBZVhrZlEKcHVSYjlaY3NWV0pMY3NnNEttVktzcnlRTmc2ZHZLRFBZUHU0ck1MU1NYcmk0N1hPWTVjWVpWdmFWcWF5NmVSOAo2T1JqajdrOUk1UWlDUzZQSGNMaFY1Q2pZdmtrWkgxSEo1QndDLy84Z0FqcVNZU0J0UWVNczdQNlhEYnpVSDFVCnk1Z2dVNTVRKzVGaWxITGt1TTRjanVLbEtlMkt6anJZYVZSeldVSG1DU2M3UC9LMEhsWFlSaE4xbXdOcEFBOHYKOW1mL0dyR1pBb0dCQU9UUzJ3UUlWckoyNlJDWXFNWVc0K3R1dDduZ29XMjFjaXg0bC81YUJpbUpoOVorTjVYbApwUjJKUFNsNW9kNnhza3RUNDZKTm81TVltOVZuSVdhTmh2TjB1ZEhlU09YclQzQ0dFT1BlOGNsbjVJOFRtYmE3CjlsN1dRenJHblZiRlcwV1M0OVliNGxFa3QwSnA3d0s3MFhvRzB2MkxWak55aUx1aC8rS21xSXFOQW9HQkFQRm4KckFMOFhjNDZaTVl6Qkc5Sm85L29ma2txbFdBVVp6OTlPTEF3YVIwSCsvdlVZN25DaUUxV0RwY3hJeXlWZ3g3cApLWUFUTzJIT3JFODVZMzJwb2NzSkVPTUdCblIzbFNraVcwQUpWVWxxU0h6YjUyT0U3SzBYcFVubmNVSm9pZVJCClFTWjMybW1QZDFvSjV5STFFSUVMeDluTkdlOUZWM0xpY2k4NUZJK1BBb0dBZE5jVjdtRXpvNzBFRk8xZWdJZC8KcWQvSEFLcXF3eEk3VW1uaGNvY1ZUbkJqWkNyZXh6T1R0QmszbWMzNTBYUjZ6ZXZ2K0JnY3hpZHlxdTBXS1A5cgpRVFVCRFNDcnFIc1cvU1gzeWVNMUl0cGg0b3pubUY4eDFnc2lHUWtCbmlUNERmYUxUL0M5QnlId1VZRTJBZmRWClp6SEUycUlqU2ZIWno3VlFxN0xkcktFQ2dZRUF0T2sydFg0ZlpwL0lTZWlOMkVEZHVMMXBkcmVjL2tZTUlqNWIKcjE1NFI3Tm1HaEhQTXJVZ3BLUnJoczdpUjFVODBIdDRDRzFoUVNrN1pKdmpmWmNVa3k0V0k2eXVSYllnYUpWQQp3VHE5V2FsMjdXdDNldE53OHo4WE5jMW15WmZDVHZiQU5tMzNsc2hYYjNpZ2FMaFB5QVhtSGNsaE9EbEZFZW0yCkhNR3dNTzBDZ1lFQWtKenN5YlR4UHJoMk9NYWw5Q0w2dnVtak9sU0ZNN1E1N1hpK2tWVW1NY1lNdzI4QTd5NGkKamF3OE9TT0t3dTQvZGFqV0FENHJ2aGY2WGVqbEUwSmhKVERUdW8zYnhxY2cwUXkva21LZjI1UUhHSUtHVEJLagpDMzd2OFlNNzRRNHljUlZxVkpLT2FFV3lUWjJKbzQyZDh6dVhqOWt6RW1iVDRZTDZHOHg0bWo0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: '9965'
    prometheus.io/scrape: 'true'
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 7ea0f84b0e734291ce796540514138a716d62f999891d9654a671ac2aeac0e01
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 172.16.30.100
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          image: quay.io/cilium/operator-generic:v1.18.3@sha256:b5a0138e1a38e4437c5215257ff4e35373619501f4877dbaf92c89ecfad81797
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 72466160528848f9ae50f036bef8773407721a2ab6873a17d88337f328b124bb
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.18.3@sha256:e53e00c47fe4ffb9c086bad0c1c77f23cb968be4385881160683d9e15aa34dc3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName:
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.13.3@sha256:661d5de7050182d495c6497ff0b007a7a1e379648e60830dd68c4d78ae21761d
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: '8090'
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.13.3@sha256:db1454e45dc39ca41fbf7cad31eec95d99e5b9949c39daaad0fa81ef29d56953
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName:
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 172.16.30.100
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          image: quay.io/cilium/cilium:v1.18.3@sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: 'true'
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: 'true'
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: 'true'
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 172.16.30.100
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          image: quay.io/cilium/cilium:v1.18.3@sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.18.3@sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 172.16.30.100
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          image: quay.io/cilium/cilium:v1.18.3@sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.18.3@sha256:5649db451c88d928ea585514746d50d91e6210801b300c897283ea319d68de15
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
